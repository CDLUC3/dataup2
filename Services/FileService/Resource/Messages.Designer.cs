//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Research.DataOnboarding.FileService.Resource {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Research.DataOnboarding.FileService.Resource.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed for the repository..
        /// </summary>
        public static string AuthenticationFailed {
            get {
                return ResourceManager.GetString("AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best practices check is available only for xlsx files..
        /// </summary>
        public static string BestPractisesNotSupportedMessage {
            get {
                return ResourceManager.GetString("BestPractisesNotSupportedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blank cells.
        /// </summary>
        public static string BlankCells {
            get {
                return ResourceManager.GetString("BlankCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blank cells within a contiguous data table are potentially problematic for reading files in other programs..
        /// </summary>
        public static string BlankCellsDescription {
            get {
                return ResourceManager.GetString("BlankCellsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designate a coding scheme for missing data or other explanations for blank cells..
        /// </summary>
        public static string BlankCellsRecommendation {
            get {
                return ResourceManager.GetString("BlankCellsRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color coded text or cell shading.
        /// </summary>
        public static string ColorCodedTextOrCellShading {
            get {
                return ResourceManager.GetString("ColorCodedTextOrCellShading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting will not be visible when data are exported as a .csv file. If formatting is used as a coding scheme, all codes will be lost upon export..
        /// </summary>
        public static string ColorCodedTextOrCellShadingDescription {
            get {
                return ResourceManager.GetString("ColorCodedTextOrCellShadingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use descriptions or alphanumeric coding schemes in a new column.
        /// </summary>
        public static string ColorCodedTextOrCellShadingRecommendation {
            get {
                return ResourceManager.GetString("ColorCodedTextOrCellShadingRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns have mixed data types.
        /// </summary>
        public static string ColumnsHaveMixedDataTypes {
            get {
                return ResourceManager.GetString("ColumnsHaveMixedDataTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some programs cannot handle mixed data types (e.g. numbers and text in the same column)..
        /// </summary>
        public static string ColumnsHaveMixedDataTypesDescription {
            get {
                return ResourceManager.GetString("ColumnsHaveMixedDataTypesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure you are using only numbers or only text in a column; split data into multiple columns if necessary..
        /// </summary>
        public static string ColumnsHaveMixedDataTypesRecommendation {
            get {
                return ResourceManager.GetString("ColumnsHaveMixedDataTypesRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commas.
        /// </summary>
        public static string Commas {
            get {
                return ResourceManager.GetString("Commas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commas are often used to separate multiple piece of information/data (e.g. City, State). Cells should have only one piece of information..
        /// </summary>
        public static string CommasDescription {
            get {
                return ResourceManager.GetString("CommasDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split pieces of information into multiple columns (e.g. City column and State column).
        /// </summary>
        public static string CommasRecommendation {
            get {
                return ResourceManager.GetString("CommasRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded charts.
        /// </summary>
        public static string EmbeddedCharts {
            get {
                return ResourceManager.GetString("EmbeddedCharts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These embedded items will not be visible when data are exported as a .csv file. Also, these elements are visible only if the file is opened with Microsoft Excel..
        /// </summary>
        public static string EmbeddedChartsDescription {
            get {
                return ResourceManager.GetString("EmbeddedChartsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move embedded charts, tables, or pictures to other tabs in your file or a completely separate file..
        /// </summary>
        public static string EmbeddedChartsRecommendation {
            get {
                return ResourceManager.GetString("EmbeddedChartsRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded comments.
        /// </summary>
        public static string EmbeddedComments {
            get {
                return ResourceManager.GetString("EmbeddedComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments will not be visible when data are exported as a .csv file. Also, these elements are visible only if the file is opened with Microsoft Excel..
        /// </summary>
        public static string EmbeddedCommentsDescription {
            get {
                return ResourceManager.GetString("EmbeddedCommentsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new column titled &apos;Comments&apos; and add your text there..
        /// </summary>
        public static string EmbeddedCommentsRecommendation {
            get {
                return ResourceManager.GetString("EmbeddedCommentsRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded pictures.
        /// </summary>
        public static string EmbeddedPictures {
            get {
                return ResourceManager.GetString("EmbeddedPictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These embedded items will not be visible when data are exported as a .csv file. Also, these elements are visible only if the file is opened with Microsoft Excel..
        /// </summary>
        public static string EmbeddedPicturesDescription {
            get {
                return ResourceManager.GetString("EmbeddedPicturesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move embedded charts, tables, or pictures to other tabs in your file or a completely separate file..
        /// </summary>
        public static string EmbeddedPicturesRecommendation {
            get {
                return ResourceManager.GetString("EmbeddedPicturesRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded Shapes.
        /// </summary>
        public static string EmbeddedShapes {
            get {
                return ResourceManager.GetString("EmbeddedShapes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These embedded items will not be visible when data are exported as a .csv file. Also, these elements are visible only if the file is opened with Microsoft Excel..
        /// </summary>
        public static string EmbeddedShapesDescription {
            get {
                return ResourceManager.GetString("EmbeddedShapesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move embedded charts, tables, or pictures to other tabs in your file or a completely separate file..
        /// </summary>
        public static string EmbeddedShapesRecommendation {
            get {
                return ResourceManager.GetString("EmbeddedShapesRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file ,Column should start from A1 location.
        /// </summary>
        public static string INVALIDCOLUMNLOCATION {
            get {
                return ResourceManager.GetString("INVALIDCOLUMNLOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merged cells.
        /// </summary>
        public static string MergedCells {
            get {
                return ResourceManager.GetString("MergedCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merged cells will not be maintained when data are exported as a .csv file. Information may be lost when cells are unmerged upon export..
        /// </summary>
        public static string MergedCellsDescription {
            get {
                return ResourceManager.GetString("MergedCellsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unmerge cells and annotate appropriately so information is not lost..
        /// </summary>
        public static string MergedCellsRecommendation {
            get {
                return ResourceManager.GetString("MergedCellsRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns values are missing.
        /// </summary>
        public static string MISSINGCOLUMNDATA {
            get {
                return ResourceManager.GetString("MISSINGCOLUMNDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header {0} is missing.
        /// </summary>
        public static string MISSINGHEADER {
            get {
                return ResourceManager.GetString("MISSINGHEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headers are not in order.
        /// </summary>
        public static string MISSINGHEADERORDER {
            get {
                return ResourceManager.GetString("MISSINGHEADERORDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-contiguous data.
        /// </summary>
        public static string NonContiguousData {
            get {
                return ResourceManager.GetString("NonContiguousData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty columns or rows tend to be used to separate multiple data tables on the same tab..
        /// </summary>
        public static string NonContiguousDataDescription {
            get {
                return ResourceManager.GetString("NonContiguousDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move multiple tables onto separate tabs..
        /// </summary>
        public static string NonContiguousDataRecommendation {
            get {
                return ResourceManager.GetString("NonContiguousDataRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns under Header {0} should be of Numeric data.
        /// </summary>
        public static string NUMERICDATATYPEMISMATCH {
            get {
                return ResourceManager.GetString("NUMERICDATATYPEMISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to run quality check rules on the data. Possible causes can be invalid and/or corrupt data..
        /// </summary>
        public static string QualityCheck_ExecutionFailure {
            get {
                return ResourceManager.GetString("QualityCheck_ExecutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header &apos;{0}&apos; is missing..
        /// </summary>
        public static string QualityCheck_HeaderMissingMessageTemplate {
            get {
                return ResourceManager.GetString("QualityCheck_HeaderMissingMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headers are not in order..
        /// </summary>
        public static string QualityCheck_HeaderNotInOrderMessageTemplate {
            get {
                return ResourceManager.GetString("QualityCheck_HeaderNotInOrderMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data under header &apos;{0}&apos; should be numeric..
        /// </summary>
        public static string QualityCheck_NumericTypeErrorMessageTemplate {
            get {
                return ResourceManager.GetString("QualityCheck_NumericTypeErrorMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data under header &apos;{0}&apos; is not in the specified range {1} to {2}..
        /// </summary>
        public static string QualityCheck_RangeErrorMessageTemplate {
            get {
                return ResourceManager.GetString("QualityCheck_RangeErrorMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special characters.
        /// </summary>
        public static string SpecialCharacters {
            get {
                return ResourceManager.GetString("SpecialCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special characters may cause problems for other programs or may be modified upon export.
        /// </summary>
        public static string SpecialCharactersDescription {
            get {
                return ResourceManager.GetString("SpecialCharactersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alpha-numeric characters only. If needed, describe the symbol in a new column.
        /// </summary>
        public static string SpecialCharactersRecommendation {
            get {
                return ResourceManager.GetString("SpecialCharactersRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns under Header {0} should be of text data.
        /// </summary>
        public static string TEXTDATATYPEMISMATCH {
            get {
                return ResourceManager.GetString("TEXTDATATYPEMISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Count.
        /// </summary>
        public static string TotalCount {
            get {
                return ResourceManager.GetString("TotalCount", resourceCulture);
            }
        }
    }
}
