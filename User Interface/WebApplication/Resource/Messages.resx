<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationFailed" xml:space="preserve">
    <value>Authentication failed for the repository.</value>
  </data>
  <data name="CurruptFileErrMsg" xml:space="preserve">
    <value>File contains corrupted data</value>
  </data>
  <data name="DownloadAction" xml:space="preserve">
    <value>DownloadFile</value>
  </data>
  <data name="DownLoadErrorMsg" xml:space="preserve">
    <value>Error while downloading uploaded file, retry.</value>
  </data>
  <data name="DownLoadFrmRepErrMsg" xml:space="preserve">
    <value>Error while downloading from repository, retry.</value>
  </data>
  <data name="DownLoadRepAction" xml:space="preserve">
    <value>DownloadFileFromRepository</value>
  </data>
  <data name="DuplicateHeaderMsg" xml:space="preserve">
    <value>Duplicate header names are not allowed.</value>
  </data>
  <data name="DuplicateRepositoryMsg" xml:space="preserve">
    <value>Repository name exists already, try with other name.</value>
  </data>
  <data name="DuplicateRuleMsg" xml:space="preserve">
    <value>Rule name exists already, try with other rule name.</value>
  </data>
  <data name="ErrInvalidRange" xml:space="preserve">
    <value>Invalid range values.</value>
  </data>
  <data name="ErrNoSheetSelected" xml:space="preserve">
    <value>No sheet is selected.</value>
  </data>
  <data name="ErrRangeEndSmall" xml:space="preserve">
    <value>Range end should be greater than range start.</value>
  </data>
  <data name="ErrValidateSheets" xml:space="preserve">
    <value>Error while validating the sheet(s)</value>
  </data>
  <data name="FileTypeHint" xml:space="preserve">
    <value>Specify the file extensions ';' seperated, like xlsx;csv;...</value>
  </data>
  <data name="FileTypeNotSupportQCMsg" xml:space="preserve">
    <value>File does not support quality check rule validations.</value>
  </data>
  <data name="IdentifierURLRequiredMsg" xml:space="preserve">
    <value>Get identifier URL is required.</value>
  </data>
  <data name="InvalidURLMsg" xml:space="preserve">
    <value>Invalid URL format.</value>
  </data>
  <data name="MissHeaderMsg" xml:space="preserve">
    <value>Header names are missing.</value>
  </data>
  <data name="NoMetadataFould" xml:space="preserve">
    <value>No metadata associated with this repository.</value>
  </data>
  <data name="NoQCRulesDefined" xml:space="preserve">
    <value>No quality check Rules are defined.</value>
  </data>
  <data name="NoQualityCheckRulesFound" xml:space="preserve">
    <value>No quality check rules exists to validate.</value>
  </data>
  <data name="NoRepositoriesMsg" xml:space="preserve">
    <value>Repositories are not available.</value>
  </data>
  <data name="PostErrorMessage" xml:space="preserve">
    <value>Error while posting.</value>
  </data>
  <data name="PostSuccessMessage" xml:space="preserve">
    <value>File posted successfully.</value>
  </data>
  <data name="PostURLRequiredMsg" xml:space="preserve">
    <value>Post file URL is required.</value>
  </data>
  <data name="PwdRequiredMsg" xml:space="preserve">
    <value>Password required.</value>
  </data>
  <data name="QCRuleNameRequiredMsg" xml:space="preserve">
    <value>Quality check rule name required.</value>
  </data>
  <data name="QualityCheckErrorMsg" xml:space="preserve">
    <value>Error while saving quality check rule data. Retry.</value>
  </data>
  <data name="RepNameRequiredMsg" xml:space="preserve">
    <value>Repository name required.</value>
  </data>
  <data name="RepositoryDelErrMsg" xml:space="preserve">
    <value>Error while deleting repository. Retry.</value>
  </data>
  <data name="RepositoryErrMsg" xml:space="preserve">
    <value>Error while saving repository data. Retry.</value>
  </data>
  <data name="UploadErrorMessage" xml:space="preserve">
    <value>Error while uploading the file. Retry.</value>
  </data>
  <data name="UserNameRequiredMsg" xml:space="preserve">
    <value>User name required.</value>
  </data>
</root>